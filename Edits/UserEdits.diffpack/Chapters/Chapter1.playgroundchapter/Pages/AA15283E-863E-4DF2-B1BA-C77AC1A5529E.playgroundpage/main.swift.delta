<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

if 0.isMultiple(of: 4) {
    print("yes")
}

var charAr = ["a", "b", "c", "b"]

print(Set(charAr))


charAr = charAr.dropLast()
print(charAr)


extension String {
    var isNumber: Bool {
        let digitsCharacters = CharacterSet(charactersIn: "0123456789")        
        return CharacterSet(charactersIn: self).isSubset(of: digitsCharacters)
    }
}



let myString = "30293"

if myString.first!.isNumber {
    print("yes")
}

var myDict = ["folder": 12]

myDict["folder"]! += 12

print(myDict)


let set1 = [90781, 90698, 90381, 82162, 79812, 79744, 79532, 75969, 75000, 75000, 75000, 73809, 62811, 59872, 52067, 46355, 43495, 43177, 39489, 34771, 34771, 27497, 27497, 27497, 22089, 14247, 10176]

let set2 = [90698, 90381, 82162, 79532, 75969, 75000, 75000, 73809, 62811, 59872, 52067, 46355, 43495, 43177, 34771, 34771, 27497, 27497, 22089, 14247, 10176]


let differences = Set(set1).symmetricDifference(Set(set2))

print(differences)

for i in 0...1 {
    print(i)
}
</string>
			<key>ModifiedRange</key>
			<string>{1, 996}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>

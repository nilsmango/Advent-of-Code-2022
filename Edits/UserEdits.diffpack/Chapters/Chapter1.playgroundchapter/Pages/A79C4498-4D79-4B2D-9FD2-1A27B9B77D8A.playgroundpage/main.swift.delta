<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

let input = load(file: "input02")

// A, X for Rock, B, Y for Paper, and C, Z for Scissors
// A, X gets 1, B, Y gets 2, and C, Z gets 3
// lost gets 0, draw gets 3, win gets 6

let roundsArray = input?.components(separatedBy: .newlines)

let testArray = ["A Y", "B X", "C Z"]

let countDict = ["A X":4, "A Y":8, "A Z":3, "B X":1, "B Y":5, "B Z":9, "C X":7, "C Y": 2, "C Z":6]


func countingCases(dict: [String:Int]) -&gt; Int {
    var score = 0
    for pair in dict {
        var keyCount = 0
        for round in roundsArray! {
            if round == pair.key {
                keyCount += 1
            }
        }
        let keyScore = keyCount * pair.value
        score += keyScore
    }
    return score
}

// part 01
print(countingCases(dict: countDict))

// part 02 (fuck)

// A, X for Rock, B, Y for Paper, and C, Z for Scissors
// A, X gets 1, B, Y gets 2, and C, Z gets 3
// X lose, Y draw, Z win
// lost gets 0, draw gets 3, win gets 6

let countDict2 = ["A X":3, "A Y":4, "A Z":8, "B X":1, "B Y":5, "B Z":9, "C X":2, "C Y": 6, "C Z":7]

print(countingCases(dict: countDict2))
</string>
			<key>ModifiedRange</key>
			<string>{1, 1109}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

// Here we go.

let input = load(file: "input04")

let pairArray = input!.components(separatedBy: .newlines).dropLast()


func makeArrayOfRange(from range: String) -&gt; [Int] {
    let fullRange = range.split(separator: "-")
    let rangeLow = Int(fullRange.first!)!
    let rangeHigh = Int(fullRange.last!)!
    
    let resultingArray = Array(rangeLow...rangeHigh)
    
    return resultingArray
}
// part 01
var countingSubsets = 0
// part 02
var countingOverlaps = 0
for pair in pairArray {
    let pairs = pair.split(separator: ",")
    let pairRange1 = makeArrayOfRange(from: String(pairs[0]))
    let pairRange2 = makeArrayOfRange(from: String(pairs[1]))
    
    if pairRange1.count &gt;= pairRange2.count {
        if Set(pairRange2).isSubset(of: Set(pairRange1)) {
            countingSubsets += 1
        }
    } else if pairRange1.count &lt; pairRange2.count {
        if Set(pairRange1).isSubset(of: Set(pairRange2)) {
            countingSubsets += 1
        }
    }
    
    for sector in pairRange1 {
        if pairRange2.contains(sector) {
            countingOverlaps += 1
            break
        }
        
    }
    
}

print(countingSubsets)
print(countingOverlaps)


</string>
			<key>ModifiedRange</key>
			<string>{1, 1203}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>

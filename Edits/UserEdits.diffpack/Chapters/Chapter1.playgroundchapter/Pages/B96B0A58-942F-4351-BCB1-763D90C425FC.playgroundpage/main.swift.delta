<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

let input = load(file: "input03")

let inputArray = input!.components(separatedBy: .newlines)

func makePriorityValueDict() -&gt; [String:Int]  {
    let alphabet = "abcdefghijklmnopqrstuvwxyz"
    let lowerCaseArray = Array(alphabet)
    let upperCaseArray = Array(alphabet.uppercased())
    var dict: [String:Int] = [:]
    
    for (index, value) in lowerCaseArray.enumerated() {
        dict[String(value)] = index + 1
    }
    for (index, value) in upperCaseArray.enumerated() {
        dict[String(value)] = index + 27
    }
    return dict
}

let scoreDict = makePriorityValueDict()

// 01
var prioritySum = 0
for line in inputArray {
    let length = line.count / 2
    let firstPart = Set(line.prefix(length))
    let secondPart = Set(line.suffix(length))
    let duplicate = String(firstPart.intersection(secondPart))
    let score = scoreDict[duplicate]
    prioritySum += score ?? 0
}
print(prioritySum)

//02

extension Array {
    func chunked(into size: Int) -&gt; [[Element]] {
        return stride(from: 0, to: count, by: size).map {
            Array(self[$0 ..&lt; Swift.min($0 + size, count)])
        }
    }
}

var prioritySum2 = 0
let chunkedArray = inputArray.chunked(into: 3)
//print(chunkedArray)

for threeLines in chunkedArray {
    if threeLines.count &gt; 1 {
            let one = Set(threeLines[0])
            let two = Set(threeLines[1])
            let three = Set(threeLines[2])
            let duplicate = String(one.intersection(two).intersection(three))
            let score = scoreDict[duplicate]
            prioritySum2 += score ?? 0
    }

    
}
print(prioritySum2)
</string>
			<key>ModifiedRange</key>
			<string>{1, 1620}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
